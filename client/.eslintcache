[{"C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\index.js":"1","C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\App.js":"2","C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Router.js":"3","C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Containers\\Navigation.js":"4","C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Redux\\Store.js":"5","C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Containers\\Login.js":"6","C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Components\\Landing.js":"7","C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Components\\Chat\\MessageView.js":"8","C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Components\\Register.js":"9","C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Components\\Navigation.js":"10","C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Redux\\reducers.js":"11","C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Redux\\state.js":"12","C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Redux\\actions.js":"13","C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Components\\Login.js":"14","C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Containers\\Chat.js":"15","C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Components\\Chat\\SideBar.js":"16","C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Containers\\Contacts.js":"17","C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Containers\\SideBarList.js":"18","C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Components\\Chat\\Chat.js":"19","C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Components\\Chat\\Contacts.js":"20","C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Components\\Chat\\SideBarList.js":"21","C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Containers\\MsgBar.js":"22","C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Components\\Chat\\MsgBar.js":"23"},{"size":457,"mtime":1612124515507,"results":"24","hashOfConfig":"25"},{"size":413,"mtime":1612243104329,"results":"26","hashOfConfig":"25"},{"size":1059,"mtime":1616529382944,"results":"27","hashOfConfig":"25"},{"size":445,"mtime":1612284195709,"results":"28","hashOfConfig":"25"},{"size":369,"mtime":1612240988386,"results":"29","hashOfConfig":"25"},{"size":496,"mtime":1613194944835,"results":"30","hashOfConfig":"25"},{"size":125,"mtime":1612283023006,"results":"31","hashOfConfig":"25"},{"size":307,"mtime":1614203866782,"results":"32","hashOfConfig":"25"},{"size":3284,"mtime":1616544726845,"results":"33","hashOfConfig":"25"},{"size":3152,"mtime":1616541941653,"results":"34","hashOfConfig":"25"},{"size":1695,"mtime":1616633381414,"results":"35","hashOfConfig":"25"},{"size":102,"mtime":1615521202859,"results":"36","hashOfConfig":"25"},{"size":1053,"mtime":1616633559712,"results":"37","hashOfConfig":"25"},{"size":3339,"mtime":1616544429161,"results":"38","hashOfConfig":"25"},{"size":407,"mtime":1616375120991,"results":"39","hashOfConfig":"25"},{"size":3101,"mtime":1615173664225,"results":"40","hashOfConfig":"25"},{"size":462,"mtime":1616470588221,"results":"41","hashOfConfig":"25"},{"size":705,"mtime":1616633225916,"results":"42","hashOfConfig":"25"},{"size":5469,"mtime":1616554678557,"results":"43","hashOfConfig":"25"},{"size":1536,"mtime":1616511321195,"results":"44","hashOfConfig":"25"},{"size":3044,"mtime":1616637378572,"results":"45","hashOfConfig":"25"},{"size":240,"mtime":1614208509943,"results":"46","hashOfConfig":"25"},{"size":609,"mtime":1616541957748,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"wyhn4p",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\index.js",[],["97","98"],"C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\App.js",[],"C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Router.js",[],"C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Containers\\Navigation.js",[],"C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Redux\\Store.js",[],"C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Containers\\Login.js",[],"C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Components\\Landing.js",[],"C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Components\\Chat\\MessageView.js",[],"C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Components\\Register.js",[],"C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Components\\Navigation.js",[],"C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Redux\\reducers.js",[],"C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Redux\\state.js",["99"],"export default {\r\n    loggedIn: false,\r\n    user: {},\r\n    recipient: {},\r\n    toggleSideBar: false\r\n}","C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Redux\\actions.js",[],"C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Components\\Login.js",[],"C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Containers\\Chat.js",[],"C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Components\\Chat\\SideBar.js",[],"C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Containers\\Contacts.js",[],"C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Containers\\SideBarList.js",["100"],"C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Components\\Chat\\Chat.js",["101","102","103","104"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./ChatStyles.css\";\r\nimport MsgBar from \"../../Containers/MsgBar\";\r\nimport styled from \"styled-components\";\r\nimport useSocket from \"use-socket.io-client\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst InputArea = styled.input`\r\n  position: static;\r\n  top: 0;\r\n  width: 87%;\r\n  height: 45px;\r\n  padding-left: 10px;\r\n  font-size: 15px;\r\n  background-color: #c1c1c1;\r\n  border: 1px solid lightgray;\r\n  outline: none;\r\n  letter-spacing: 1px;\r\n  line-height: 20px;\r\n`;\r\nconst BubbleMe = styled.p`\r\n  display: inline-block;\r\n  position: relative;\r\n  align-items: flex-end;\r\n  text-align: center;\r\n  font-size: 12pt;\r\n  max-width: 85vh;\r\n  height: auto;\r\n  padding-left: 15pt;\r\n  padding-right: 15pt;\r\n  padding-top: 5pt;\r\n  padding-bottom: 5pt;\r\n  margin: 7pt;\r\n  border: 2pt solid #2d88ff;\r\n  border-radius: 25px;\r\n  -webkit-border-radius: 25px;\r\n  -moz-border-radius: 25px;\r\n  color: #242526;\r\n  background-color: #2d88ff;\r\n  align-self: flex-end;\r\n`;\r\n\r\nconst BubbleYou = styled.p`\r\n  display: inline-block;\r\n  position: relative;\r\n  align-items: flex-start;\r\n  text-align: center;\r\n  font-size: 12pt;\r\n  max-width: 85vh;\r\n  padding-left: 15pt;\r\n  padding-right: 15pt;\r\n  padding-top: 5pt;\r\n  padding-bottom: 5pt;\r\n  margin: 10pt;\r\n  border: 2pt solid #3a3b3c;\r\n  border-radius: 25px;\r\n  -webkit-border-radius: 25px;\r\n  -moz-border-radius: 25px;\r\n  color: white;\r\n  background-color: #3a3b3c;\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  page: {\r\n    margin: 0,\r\n    width: \"100%\",\r\n    height: \"500px\",\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  messageContainer: {\r\n    width: \"auto\",\r\n    height: \"100%\",\r\n    backgroundColor: \"#242526\",\r\n    overflowY: \"scroll\",\r\n  },\r\n  messageContent: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"flex-end\",\r\n    width: \"auto\",\r\n    height: \"89%\",\r\n    marginBottom: 0,\r\n    marginRight: \"15pt\",\r\n    marginLeft: \"15pt\",\r\n    color: \"white\",\r\n    // overflowY: \"auto\",\r\n  },\r\n  input: {\r\n    marginTop: 0,\r\n    width: \"auto\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    height: \"45px\",\r\n    marginLeft: 0,\r\n    marginBottom: \"9pt\",\r\n  },\r\n}));\r\n\r\nconst Chat = (props) => {\r\n  const classes = useStyles();\r\n  const [input, setInput] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [socket] = useSocket(\"http://localhost:3001\");\r\n  let list = props.messages;\r\n  let toggle = props.toggleSideBar;\r\n  socket.connect();\r\n\r\n  let user = props.user;\r\n  let results;\r\n\r\n  //recieving message from server\r\n  //recieves on update of results from server\r\n  useEffect(() => {\r\n    socket.on(\"Output Chat Message\", (data) => {\r\n      results = data[0];\r\n      setMessages((messages) => [...messages, results]);\r\n    });\r\n    return () => { \r\n      socket.removeListener(\"Output Chat Message\");\r\n    };\r\n  }, [results]);\r\n\r\n  //displays old messages from database by to and from \r\n  //returns into messages state\r\n  useEffect(() => {\r\n    if (toggle) {\r\n      setMessages(\"\");\r\n      let userArray = list.map((item) => {\r\n        let userObj = { message: \"\", username: \"\" };\r\n        userObj.username = item.sender;\r\n        userObj.message = item.message;\r\n        return userObj;\r\n      });\r\n      setMessages(userArray);\r\n    }\r\n  }, [list]);\r\n\r\n  //sending message to server\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    let chatMessage = input;\r\n    let senderId = props.user.userId;\r\n    let recipientId = props.recipient._id;\r\n    let username = props.user.username;\r\n\r\n    socket.emit(\"Input Chat Message\", {\r\n      chatMessage,\r\n      senderId,\r\n      recipientId,\r\n      username,\r\n    });\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className={classes.page}>\r\n      <MsgBar />\r\n      <div className={classes.messageContainer}>\r\n        <div className={classes.messageContent}>\r\n          {messages.map((item, index) => (\r\n            <div\r\n              className={`${\r\n                item.username == user.username\r\n                  ? \"align-self-end\"\r\n                  : \"align-self-start\"\r\n              }`}\r\n              key={index}\r\n            >\r\n              {item.username == user.username ? (\r\n                <BubbleMe>{item.message}</BubbleMe>\r\n              ) : (\r\n                <div>\r\n                  <p style={{ marginLeft: \"12pt\", marginBottom: \"0\" }}>\r\n                    {props.recipient.username}\r\n                  </p>\r\n                  <BubbleYou>{item.message}</BubbleYou>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className={classes.input} style={{ position: \"sticky\" }}>\r\n          <form onSubmit={handleSubmit} style={{ marginLeft: \"15pt\" }}>\r\n            <InputArea\r\n              type=\"text\"\r\n              value={input}\r\n              onChange={(event) => setInput(event.target.value)}\r\n              onSubmit={handleSubmit}\r\n            />\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              endIcon={<Icon />}\r\n            >\r\n              Send\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Chat;\r\n","C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Components\\Chat\\Contacts.js",[],"C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Components\\Chat\\SideBarList.js",["105","106"],"C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Containers\\MsgBar.js",[],"C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Components\\Chat\\MsgBar.js",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":1,"column":1,"nodeType":"113","endLine":6,"endColumn":2},{"ruleId":"114","severity":1,"message":"115","line":6,"column":3,"nodeType":"116","messageId":"117","endLine":6,"endColumn":14},{"ruleId":"118","severity":1,"message":"119","line":126,"column":17,"nodeType":"120","endLine":126,"endColumn":24},{"ruleId":"118","severity":1,"message":"121","line":147,"column":6,"nodeType":"122","endLine":147,"endColumn":12,"suggestions":"123"},{"ruleId":"124","severity":1,"message":"125","line":174,"column":31,"nodeType":"126","messageId":"127","endLine":174,"endColumn":33},{"ruleId":"124","severity":1,"message":"125","line":180,"column":30,"nodeType":"126","messageId":"127","endLine":180,"endColumn":32},{"ruleId":"118","severity":1,"message":"128","line":30,"column":6,"nodeType":"122","endLine":30,"endColumn":25,"suggestions":"129"},{"ruleId":"124","severity":1,"message":"125","line":38,"column":66,"nodeType":"126","messageId":"127","endLine":38,"endColumn":68},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'getContacts' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Assignments to the 'results' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","React Hook useEffect has a missing dependency: 'toggle'. Either include it or remove the dependency array.","ArrayExpression",["132"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["133"],"no-global-assign","no-unsafe-negation",{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},"Update the dependencies array to be: [list, toggle]",{"range":"138","text":"139"},"Update the dependencies array to be: [lastConversations, userId]",{"range":"140","text":"141"},[3503,3509],"[list, toggle]",[1054,1073],"[lastConversations, userId]"]