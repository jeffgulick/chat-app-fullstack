[{"C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\index.js":"1","C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\App.js":"2","C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Router.js":"3","C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Containers\\Navigation.js":"4","C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Redux\\Store.js":"5","C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Containers\\Login.js":"6","C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Components\\Landing.js":"7","C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Components\\Chat\\MessageView.js":"8","C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Components\\Register.js":"9","C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Components\\Navigation.js":"10","C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Redux\\reducers.js":"11","C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Redux\\state.js":"12","C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Redux\\actions.js":"13","C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Components\\Login.js":"14","C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Containers\\Chat.js":"15","C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Components\\Chat\\SideBar.js":"16","C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Containers\\Contacts.js":"17","C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Containers\\SideBarList.js":"18","C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Components\\Chat\\Chat.js":"19","C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Components\\Chat\\Contacts.js":"20","C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Components\\Chat\\SideBarList.js":"21","C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Containers\\MsgBar.js":"22","C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Components\\Chat\\MsgBar.js":"23"},{"size":457,"mtime":1612124515507,"results":"24","hashOfConfig":"25"},{"size":413,"mtime":1612243104329,"results":"26","hashOfConfig":"25"},{"size":1050,"mtime":1614203969527,"results":"27","hashOfConfig":"25"},{"size":445,"mtime":1612284195709,"results":"28","hashOfConfig":"25"},{"size":369,"mtime":1612240988386,"results":"29","hashOfConfig":"25"},{"size":496,"mtime":1613194944835,"results":"30","hashOfConfig":"25"},{"size":125,"mtime":1612283023006,"results":"31","hashOfConfig":"25"},{"size":307,"mtime":1614203866782,"results":"32","hashOfConfig":"25"},{"size":3018,"mtime":1613622027734,"results":"33","hashOfConfig":"25"},{"size":2386,"mtime":1613621961466,"results":"34","hashOfConfig":"25"},{"size":1935,"mtime":1616511321207,"results":"35","hashOfConfig":"25"},{"size":102,"mtime":1615521202859,"results":"36","hashOfConfig":"25"},{"size":1377,"mtime":1616511321203,"results":"37","hashOfConfig":"25"},{"size":3339,"mtime":1616043827354,"results":"38","hashOfConfig":"25"},{"size":407,"mtime":1616375120991,"results":"39","hashOfConfig":"25"},{"size":3101,"mtime":1615173664225,"results":"40","hashOfConfig":"25"},{"size":462,"mtime":1616470588221,"results":"41","hashOfConfig":"25"},{"size":922,"mtime":1616511321203,"results":"42","hashOfConfig":"25"},{"size":4881,"mtime":1616470541654,"results":"43","hashOfConfig":"25"},{"size":1536,"mtime":1616511321195,"results":"44","hashOfConfig":"25"},{"size":2583,"mtime":1616511397479,"results":"45","hashOfConfig":"25"},{"size":240,"mtime":1614208509943,"results":"46","hashOfConfig":"25"},{"size":633,"mtime":1614231818973,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"wyhn4p",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\index.js",[],["98","99"],"C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\App.js",[],"C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Router.js",["100"],"import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router';\r\nimport cookie from 'cookie'\r\nimport Login from './Containers/Login';\r\nimport Register from './Components/Register';\r\nimport Landing from './Components/Landing';\r\nimport MessageView from './Components/Chat/MessageView';\r\n\r\nconst checkAuth = () => {\r\n    const cookies = cookie.parse(document.cookie)\r\n    return cookies[\"loggedIn\"] ? true : false\r\n}\r\n\r\nconst ProtectedRoute = ({component: Component, ...rest}) => {\r\n    return (\r\n        <Route\r\n        {...rest}\r\n        render={(props) => checkAuth()\r\n            ? <Component {...props} />\r\n            : <Redirect to=\"/login\" />}\r\n        />\r\n    )\r\n}\r\n\r\nconst Router = () => {\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/\" component={Landing} />\r\n            <Route exact path=\"/message\" component={MessageView} />\r\n            <Route path=\"/login\" component={Login} />\r\n            <Route path = \"/register\" component={Register}/>\r\n        </Switch>\r\n    );\r\n};\r\n\r\nexport default Router; ","C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Containers\\Navigation.js",[],"C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Redux\\Store.js",[],"C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Containers\\Login.js",[],"C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Components\\Landing.js",[],"C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Components\\Chat\\MessageView.js",[],"C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Components\\Register.js",[],"C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Components\\Navigation.js",[],"C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Redux\\reducers.js",[],"C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Redux\\state.js",["101"],"export default {\r\n    loggedIn: false,\r\n    user: {},\r\n    recipient: {},\r\n    toggleSideBar: false\r\n}","C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Redux\\actions.js",[],"C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Components\\Login.js",[],"C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Containers\\Chat.js",[],"C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Components\\Chat\\SideBar.js",[],"C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Containers\\Contacts.js",[],"C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Containers\\SideBarList.js",[],"C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Components\\Chat\\Chat.js",["102","103","104","105"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./ChatStyles.css\";\r\nimport MsgBar from \"../../Containers/MsgBar\";\r\nimport styled from \"styled-components\";\r\nimport useSocket from \"use-socket.io-client\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst InputArea = styled.input`\r\n  width: 80%;\r\n  height: 45px;\r\n  border-radius: 30px;\r\n  padding-left: 10px;\r\n  font-size: 15px;\r\n  background-color: #c1c1c1;\r\n  border: 1px solid lightgray;\r\n  outline: none;\r\n  letter-spacing: 1px;\r\n  line-height: 20px;\r\n`;\r\nconst BubbleMe = styled.p`\r\n  display: inline-block;\r\n  position: relative;\r\n  align-items: flex-end;\r\n  text-align: center;\r\n  font-size: 12pt;\r\n  max-width: 85vh;\r\n  height: auto;\r\n  padding-left: 15pt;\r\n  padding-right: 15pt;\r\n  padding-top: 5pt;\r\n  padding-bottom: 5pt;\r\n  margin: 7pt;\r\n  border: 2pt solid #2d88ff;\r\n  border-radius: 25px;\r\n  -webkit-border-radius: 25px;\r\n  -moz-border-radius: 25px;\r\n  color: #242526;\r\n  background-color: #2d88ff;\r\n  align-self: flex-end;\r\n`;\r\n\r\nconst BubbleYou = styled.p`\r\n  display: inline-block;\r\n  position: relative;\r\n  align-items: flex-start;\r\n  text-align: center;\r\n  font-size: 12pt;\r\n  max-width: 85vh;\r\n  padding-left: 15pt;\r\n  padding-right: 15pt;\r\n  padding-top: 5pt;\r\n  padding-bottom: 5pt;\r\n  margin: 10pt;\r\n  border: 2pt solid #3a3b3c;\r\n  border-radius: 25px;\r\n  -webkit-border-radius: 25px;\r\n  -moz-border-radius: 25px;\r\n  color: white;\r\n  background-color: #3a3b3c;\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  page: {\r\n    margin: 0,\r\n    width: \"100%\",\r\n    height: \"500px\",\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  messageContainer: {\r\n    width: \"auto\",\r\n    height: \"100%\",\r\n    backgroundColor: \"#242526\",\r\n    overflowY: \"scroll\",\r\n  },\r\n  messageContent: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"flex-end\",\r\n    width: \"auto\",\r\n    height: \"89%\",\r\n    marginBottom: 0,\r\n    marginRight: \"15pt\",\r\n    marginLeft: \"15pt\",\r\n    color: \"white\",\r\n    // overflowY: \"auto\",\r\n  },\r\n  input: {\r\n    marginTop: 0,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst Chat = (props) => {\r\n  const classes = useStyles();\r\n  const [input, setInput] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [socket] = useSocket(\"http://localhost:3001\");\r\n  let list = props.messages;\r\n  let toggle = props.toggleSideBar;\r\n  socket.connect();\r\n\r\n  let user = props.user;\r\n  let results;\r\n\r\n  //recieving message from server\r\n  useEffect(() => {\r\n    socket.on(\"Output Chat Message\", (data) => {\r\n      results = data[0];\r\n      setMessages((messages) => [...messages, results]);\r\n    });\r\n    return () => {\r\n      socket.removeListener(\"Output Chat Message\");\r\n    };\r\n  }, [results]);\r\n\r\n  //displays old messages from database\r\n  useEffect(() => {\r\n    if (toggle) {\r\n      setMessages(\"\");\r\n      let userArray = list.map((item) => {\r\n        let userObj = { message: \"\", username: \"\" };\r\n        userObj.username = item.sender;\r\n        userObj.message = item.message;\r\n        return userObj;\r\n      });\r\n      setMessages(userArray);\r\n    }\r\n  }, [list]);\r\n\r\n  //sending message to server\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    let chatMessage = input;\r\n    let senderId = props.user.userId;\r\n    let recipientId = props.recipient._id;\r\n    let username = props.user.username;\r\n\r\n    socket.emit(\"Input Chat Message\", {\r\n      chatMessage,\r\n      senderId,\r\n      recipientId,\r\n      username,\r\n    });\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className={classes.page}>\r\n      <MsgBar />\r\n      <div className={classes.messageContainer}>\r\n        <div className={classes.messageContent}>\r\n          {messages.map((item, index) => (\r\n            <div\r\n              className={`${\r\n                item.username == user.username\r\n                  ? \"align-self-end\"\r\n                  : \"align-self-start\"\r\n              }`}\r\n              key={index}\r\n            >\r\n              {item.username == user.username ? (\r\n                <BubbleMe>{item.message}</BubbleMe>\r\n              ) : (\r\n                <div>\r\n                  <p style={{ marginLeft: \"12pt\", marginBottom: \"0\" }}>\r\n                    {props.recipient.username}\r\n                  </p>\r\n                  <BubbleYou>{item.message}</BubbleYou>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className={classes.input}>\r\n          <form onSubmit={handleSubmit} style={{ marginLeft: \"15pt\" }}>\r\n            <InputArea\r\n              type=\"text\"\r\n              value={input}\r\n              onChange={(event) => setInput(event.target.value)}\r\n              onSubmit={handleSubmit}\r\n            />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Chat;\r\n","C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Components\\Chat\\Contacts.js",[],"C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Components\\Chat\\SideBarList.js",["106","107"],"C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Containers\\MsgBar.js",[],"C:\\Users\\jeffg\\react\\Chat-app-fullstack\\client\\src\\Components\\Chat\\MsgBar.js",[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":14,"column":7,"nodeType":"114","messageId":"115","endLine":14,"endColumn":21},{"ruleId":"116","severity":1,"message":"117","line":1,"column":1,"nodeType":"118","endLine":6,"endColumn":2},{"ruleId":"119","severity":1,"message":"120","line":115,"column":17,"nodeType":"121","endLine":115,"endColumn":24},{"ruleId":"119","severity":1,"message":"122","line":135,"column":6,"nodeType":"123","endLine":135,"endColumn":12,"suggestions":"124"},{"ruleId":"125","severity":1,"message":"126","line":162,"column":31,"nodeType":"127","messageId":"128","endLine":162,"endColumn":33},{"ruleId":"125","severity":1,"message":"126","line":168,"column":30,"nodeType":"127","messageId":"128","endLine":168,"endColumn":32},{"ruleId":"119","severity":1,"message":"129","line":25,"column":6,"nodeType":"123","endLine":25,"endColumn":8,"suggestions":"130"},{"ruleId":"125","severity":1,"message":"126","line":33,"column":68,"nodeType":"127","messageId":"128","endLine":33,"endColumn":70},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"no-unused-vars","'ProtectedRoute' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","Assignments to the 'results' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","React Hook useEffect has a missing dependency: 'toggle'. Either include it or remove the dependency array.","ArrayExpression",["133"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'props' and 'userId'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["134"],"no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},"Update the dependencies array to be: [list, toggle]",{"range":"139","text":"140"},"Update the dependencies array to be: [props, userId]",{"range":"141","text":"142"},[3169,3175],"[list, toggle]",[736,738],"[props, userId]"]